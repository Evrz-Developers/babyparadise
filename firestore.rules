rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Define a function to get the user's role
    function getUserRole() {
      // Get the user's document
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc.role;
    }

    // Allow read access for all users
    match /{document=**} {
      allow read: if true;

      // Allow write access if the user is an admin
      allow write: if getUserRole() == 'admin';
    }

    // Allow authenticated users to create their own user document
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId; // Allow users to read their own data
      allow write: if request.auth != null && request.auth.uid == userId; // Allow users to write their own data
    }

    // Restrict access to products collection
    match /products/{productId} {
      allow read: if request.auth != null; // Allow authenticated users to read products
      allow write: if getUserRole() == 'admin'; // Allow write access only for admins
    }

    // Other collections can be defined here
    // match /{collection}/{document} {
    //   allow read, write: if false; // Default deny rule
    // }
  }
}